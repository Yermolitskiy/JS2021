{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/artursjermolickis/Accenture/teambootcamp/JS_team_Atom/JS_0011/03_why_use_computed_variables.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/artursjermolickis/Accenture/teambootcamp/JS_team_Atom/JS_0011/03_why_use_computed_variables.vue","mtime":1628514600719},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmJvZHkgewogIGJhY2tncm91bmQ6ICMyZTJlMmU7CiAgY29sb3I6ICNmOWY5Zjk7Cn0K"},{"version":3,"sources":["03_why_use_computed_variables.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA","file":"03_why_use_computed_variables.vue","sourceRoot":".","sourcesContent":["// template block should return single DOM node\n<template>\n  <div>\n  <h1>Current time: {{time}}</h1>\n    <div> {{ message }} </div>\n    <div> {{reverseMessage(message)}} </div>\n    <div> {{reversedMsg}} </div>\n\n  </div>\n</template>\n\n<script>\nexport default  {\n  data() {\n    return {\n      message: 'hello from message',\n      time: Date.now(),\n    };\n  },\n  methods: {\n    reverseMessage(value) {\n      return value.split(\"\").reverse().join(\"\");\n    }\n  },\n  computed: {\n    reversedMsg() {\n      return this.message.split(\"\").reverse().join(\"\");\n    }\n  },\n  // created, unmounted\n  mounted() {\n    setInterval(() => {\n      this.time = Date.now();\n    }, 1000);\n  },\n\n  // updated\n// updated() {\n//     setTimeout(() => {\n//       this.time = Date.now();\n//     }, 1000)\n//   }\n// }\n</script>\n\n<style>\nbody {\n  background: #2e2e2e;\n  color: #f9f9f9;\n}\n</style>\n"]}]}